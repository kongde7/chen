<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MEC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MEC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Tue Apr 13 10:15:27 2021
<BR><P>
<H3>Maximum Stack Usage =        536 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; More &rArr; Time &rArr;  More (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[54]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
 <LI><a href="#[6c]">Time</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">More</a><BR>
 <LI><a href="#[67]">Date</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">Time</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT0_IRQHandler</a> from key.o(i.EINT0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT3_IRQHandler</a> from key.o(i.EINT3_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from lpc1768_i2c.o(i.I2C0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[35]">KeyboardScan</a> from joystick.o(i.KeyboardScan) referenced from joystick.o(i.Joystick_Config)
 <LI><a href="#[2c]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from lpc1768_rtc.o(i.RTC_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[f]">TIMER0_IRQHandler</a> from lpc1768_timer.o(i.TIMER0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[37]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[34]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[33]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[36]">nop</a> from lpc1768_timer.o(i.nop) referenced from lpc1768_timer.o(i.Timer_Init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3a]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[96]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[97]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3b]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[98]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3c]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4e]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[99]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[41]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[ac]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[46]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b3]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b5]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[b6]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[40]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b7]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[42]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; More &rArr; Time &rArr;  More (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b8]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[55]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[45]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b9]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[47]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[49]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Time
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Date
</UL>

<P><STRONG><a name="[51]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[52]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[3d]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[8d]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[ba]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[be]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2PROM_WriteSeq
</UL>

<P><STRONG><a name="[4f]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[bf]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetAlarm
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Time
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_More
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Date
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
</UL>

<P><STRONG><a name="[4b]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4a]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[3f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[44]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[48]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c3]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>Always</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, always.o(i.Always))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Always &rArr; LCD_DisplayString2 &rArr; LCD_DisplayChar2 &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineY
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineX
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[61]"></a>Calendar</STRONG> (Thumb, 358 bytes, Stack size 72 bytes, home.o(i.Calendar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = Calendar &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekday
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
</UL>

<P><STRONG><a name="[65]"></a>Clear</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(i.Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Clear &rArr; LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
</UL>

<P><STRONG><a name="[67]"></a>Date</STRONG> (Thumb, 746 bytes, Stack size 72 bytes, date.o(i.Date))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = Date &rArr;  Time (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HowMany
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Date
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[6f]"></a>E2PROM_WriteSeq</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, 24lc02.o(i.E2PROM_WriteSeq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = E2PROM_WriteSeq &rArr; I2C0_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_ReadWrite
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[20]"></a>EINT0_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, key.o(i.EINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT3_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, key.o(i.EINT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EINT3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>Factory</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, other.o(i.Factory))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Factory &rArr; RTC_SetTime &rArr; yearday
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[8c]"></a>GetKey</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, joystick.o(i.GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>Gui_Date</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, date.o(i.Gui_Date))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Gui_Date &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[76]"></a>Gui_Home</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, home.o(i.Gui_Home))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Gui_Home &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
</UL>

<P><STRONG><a name="[77]"></a>Gui_More</STRONG> (Thumb, 310 bytes, Stack size 8 bytes, more.o(i.Gui_More))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Gui_More &rArr; Square &rArr; LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[78]"></a>Gui_Time</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, time.o(i.Gui_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = Gui_Time &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
</UL>

<P><STRONG><a name="[6b]"></a>Home</STRONG> (Thumb, 460 bytes, Stack size 72 bytes, home.o(i.Home))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = Home &rArr; Date &rArr;  Time (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[6a]"></a>HowMany</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, date.o(i.HowMany))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HowMany
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, lpc1768_i2c.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetFlag
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetI2CStatus
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetByte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>I2C0_ReadWrite</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, lpc1768_i2c.o(i.I2C0_ReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C0_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2PROM_WriteSeq
</UL>

<P><STRONG><a name="[7b]"></a>I2C_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc1768_i2c.o(i.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>I2C_GetByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc1768_i2c.o(i.I2C_GetByte))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>I2C_GetI2CStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc1768_i2c.o(i.I2C_GetI2CStatus))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>I2C_SendByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc1768_i2c.o(i.I2C_SendByte))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>I2C_SetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc1768_i2c.o(i.I2C_SetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_ReadWrite
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>Joystick_Config</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, joystick.o(i.Joystick_Config))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>LCD_ClearScreen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i.LCD_ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_ClearScreen &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[82]"></a>LCD_DisplayChar</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, lcd.o(i.LCD_DisplayChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DisplayChar &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swapXY
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
</UL>

<P><STRONG><a name="[84]"></a>LCD_DisplayChar2</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lcd.o(i.LCD_DisplayChar2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DisplayChar2 &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swapXY
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
</UL>

<P><STRONG><a name="[64]"></a>LCD_DisplayString</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcd.o(i.LCD_DisplayString))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_DisplayString &rArr; LCD_DisplayChar &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
</UL>

<P><STRONG><a name="[57]"></a>LCD_DisplayString2</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcd.o(i.LCD_DisplayString2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_DisplayString2 &rArr; LCD_DisplayChar2 &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Time
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_More
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Date
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
</UL>

<P><STRONG><a name="[66]"></a>LCD_DrawPixel</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swapXY
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineY
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineX
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear
</UL>

<P><STRONG><a name="[85]"></a>LCD_Init</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_Init &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegWr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegRd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Pin_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>LCD_Pin_Config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_config.o(i.LCD_Pin_Config))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[8f]"></a>LCD_SetBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Night
</UL>

<P><STRONG><a name="[7e]"></a>LCD_SetCursor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegWr
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[63]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Night
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
</UL>

<P><STRONG><a name="[87]"></a>LED_Config</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, led.o(i.LED_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LED_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LCD_DIR_A2B
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>LED_Off</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, led.o(i.LED_Off))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>LED_On</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, led.o(i.LED_On))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>LineX</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd.o(i.LineX))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LineX &rArr; LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
</UL>

<P><STRONG><a name="[58]"></a>LineY</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd.o(i.LineY))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LineY &rArr; LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
</UL>

<P><STRONG><a name="[89]"></a>More</STRONG> (Thumb, 3060 bytes, Stack size 56 bytes, more.o(i.More))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = More &rArr; Time &rArr;  More (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetAlarm
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Night
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_More
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2PROM_WriteSeq
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
</UL>

<P><STRONG><a name="[8a]"></a>Night</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, other.o(i.Night))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Night
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[8b]"></a>RTC_GetAlarm</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lpc1768_rtc.o(i.RTC_GetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_GetAlarm &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[69]"></a>RTC_GetTime</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lpc1768_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_GetTime &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lpc1768_rtc.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>RTC_Init</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, lpc1768_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>RTC_SetAlarm</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, lpc1768_rtc.o(i.RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RTC_SetAlarm &rArr; yearday
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekday
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yearday
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
</UL>

<P><STRONG><a name="[6d]"></a>RTC_SetTime</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, lpc1768_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RTC_SetTime &rArr; yearday
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekday
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yearday
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[91]"></a>RTC_Start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc1768_rtc.o(i.RTC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[88]"></a>Set_LCD_DIR_A2B</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, led.o(i.Set_LCD_DIR_A2B))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
</UL>

<P><STRONG><a name="[75]"></a>Square</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, lcd.o(i.Square))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Square &rArr; LCD_DrawPixel &rArr; LCD_SetCursor &rArr; BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Time
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_More
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Date
</UL>

<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lpc1768_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>Time</STRONG> (Thumb, 646 bytes, Stack size 72 bytes, time.o(i.Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = Time &rArr;  More (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Time
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
</UL>

<P><STRONG><a name="[94]"></a>Timer_Init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, lpc1768_timer.o(i.Timer_Init))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 496 bytes, Stack size 96 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = main &rArr; More &rArr; Time &rArr;  More (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;More
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Date
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Always
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Square
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString2
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_Config
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKey
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[83]"></a>swapXY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.swapXY))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[60]"></a>wait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(i.wait))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegWr
</UL>

<P><STRONG><a name="[93]"></a>wait_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.wait_delay))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_read_data
</UL>

<P><STRONG><a name="[62]"></a>weekday</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lpc1768_rtc.o(i.weekday))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = weekday
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calendar
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>

<P><STRONG><a name="[92]"></a>yearday</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, lpc1768_rtc.o(i.yearday))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yearday
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[35]"></a>KeyboardScan</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, joystick.o(i.KeyboardScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyboardScan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> joystick.o(i.Joystick_Config)
</UL>
<P><STRONG><a name="[5b]"></a>BSP_LCD_CtrlRegRd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(i.BSP_LCD_CtrlRegRd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BSP_LCD_CtrlRegRd &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[5e]"></a>BSP_LCD_CtrlRegWr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lcd.o(i.BSP_LCD_CtrlRegWr))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BSP_LCD_CtrlRegWr &rArr; SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[5d]"></a>SSD1298_read_data</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, lcd.o(i.SSD1298_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSD1298_read_data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegRd
</UL>

<P><STRONG><a name="[5c]"></a>SSD1298_write_command</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lcd.o(i.SSD1298_write_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SSD1298_write_command &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegWr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegRd
</UL>

<P><STRONG><a name="[5f]"></a>lcd_write</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, lcd.o(i.lcd_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1298_write_command
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_CtrlRegWr
</UL>

<P><STRONG><a name="[80]"></a>wr_dat_only</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(i.wr_dat_only))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = wr_dat_only &rArr; lcd_write
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[7f]"></a>wr_dat_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(i.wr_dat_start))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[81]"></a>wr_dat_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(i.wr_dat_stop))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar2
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[36]"></a>nop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc1768_timer.o(i.nop))
<BR>[Address Reference Count : 1]<UL><LI> lpc1768_timer.o(i.Timer_Init)
</UL>
<P><STRONG><a name="[34]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
